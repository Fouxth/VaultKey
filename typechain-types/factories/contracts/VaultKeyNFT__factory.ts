/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VaultKeyNFT,
  VaultKeyNFTInterface,
} from "../../contracts/VaultKeyNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_initialBaseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTokens",
        type: "uint256",
      },
    ],
    name: "setMaxTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405266038d7ea4c68000600c556103e8600d553480156200002257600080fd5b5060405162001ea238038062001ea2833981016040819052620000459162000161565b81604051806040016040528060088152602001675661756c744b657960c01b81525060405180604001604052806004815260200163564b455960e01b8152508160009081620000959190620002e6565b506001620000a48282620002e6565b5050506001600160a01b038116620000d657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000e181620000f9565b50600e620000f08282620002e6565b505050620003b2565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200017557600080fd5b82516001600160a01b03811681146200018d57600080fd5b602084810151919350906001600160401b0380821115620001ad57600080fd5b818601915086601f830112620001c257600080fd5b815181811115620001d757620001d76200014b565b604051601f8201601f19908116603f011681019083821181831017156200020257620002026200014b565b8160405282815289868487010111156200021b57600080fd5b600093505b828410156200023f578484018601518185018701529285019262000220565b60008684830101528096505050505050509250929050565b600181811c908216806200026c57607f821691505b6020821081036200028d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e157600081815260208120601f850160051c81016020861015620002bc5750805b601f850160051c820191505b81811015620002dd57828155600101620002c8565b5050505b505050565b81516001600160401b038111156200030257620003026200014b565b6200031a8162000313845462000257565b8462000293565b602080601f831160018114620003525760008415620003395750858301515b600019600386901b1c1916600185901b178555620002dd565b600085815260208120601f198616915b82811015620003835788860151825594840194600190910190840162000362565b5085821015620003a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ae080620003c26000396000f3fe6080604052600436106101b75760003560e01c80636817c76c116100ec578063a22cb4651161008a578063e831574211610064578063e83157421461049c578063e985e9c5146104b2578063f2fde38b146104d2578063f4a0a528146104f257600080fd5b8063a22cb4651461043c578063b88d4fde1461045c578063c87b56dd1461047c57600080fd5b8063715018a6116100c6578063715018a6146103d45780638da5cb5b146103e957806395a078e81461040757806395d89b411461042757600080fd5b80636817c76c146103895780636c0360eb1461039f57806370a08231146103b457600080fd5b806323b872dd1161015957806342842e0e1161013357806342842e0e146103095780634f6ccce71461032957806355f804b3146103495780636352211e1461036957600080fd5b806323b872dd146102b45780632f745c59146102d45780633ccfd60b146102f457600080fd5b8063095ea7b311610195578063095ea7b31461024b57806311e776fe1461026d5780631249c58b1461028d57806318160ddd1461029557600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461150e565b610512565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b50610206610523565b6040516101e89190611582565b34801561021f57600080fd5b5061023361022e366004611595565b6105b5565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b6102663660046115ca565b6105de565b005b34801561027957600080fd5b5061026b610288366004611595565b6105ed565b61026b6105fa565b3480156102a157600080fd5b506008545b6040519081526020016101e8565b3480156102c057600080fd5b5061026b6102cf3660046115f4565b6106b3565b3480156102e057600080fd5b506102a66102ef3660046115ca565b61073e565b34801561030057600080fd5b5061026b6107a3565b34801561031557600080fd5b5061026b6103243660046115f4565b6107f6565b34801561033557600080fd5b506102a6610344366004611595565b610816565b34801561035557600080fd5b5061026b6103643660046116bc565b61086f565b34801561037557600080fd5b50610233610384366004611595565b610883565b34801561039557600080fd5b506102a6600c5481565b3480156103ab57600080fd5b5061020661088e565b3480156103c057600080fd5b506102a66103cf366004611705565b61091c565b3480156103e057600080fd5b5061026b610964565b3480156103f557600080fd5b50600a546001600160a01b0316610233565b34801561041357600080fd5b506101dc610422366004611705565b610978565b34801561043357600080fd5b5061020661098b565b34801561044857600080fd5b5061026b610457366004611720565b61099a565b34801561046857600080fd5b5061026b61047736600461175c565b6109a5565b34801561048857600080fd5b50610206610497366004611595565b6109bd565b3480156104a857600080fd5b506102a6600d5481565b3480156104be57600080fd5b506101dc6104cd3660046117d8565b610a54565b3480156104de57600080fd5b5061026b6104ed366004611705565b610a82565b3480156104fe57600080fd5b5061026b61050d366004611595565b610abd565b600061051d82610aca565b92915050565b6060600080546105329061180b565b80601f016020809104026020016040519081016040528092919081815260200182805461055e9061180b565b80156105ab5780601f10610580576101008083540402835291602001916105ab565b820191906000526020600020905b81548152906001019060200180831161058e57829003601f168201915b5050505050905090565b60006105c082610aef565b506000828152600460205260409020546001600160a01b031661051d565b6105e9828233610b28565b5050565b6105f5610b35565b600d55565b600d54600b54106106465760405162461bcd60e51b815260206004820152601160248201527013585e081d1bdad95b9cc81b5a5b9d1959607a1b60448201526064015b60405180910390fd5b600c5434101561068f5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161063d565b600b8054600091826106a08361185b565b9091555090506106b03382610b62565b50565b6001600160a01b0382166106dd57604051633250574960e11b81526000600482015260240161063d565b60006106ea838333610b7c565b9050836001600160a01b0316816001600160a01b031614610738576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161063d565b50505050565b60006107498361091c565b821061077a5760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161063d565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107ab610b35565b476107be600a546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050501580156105e9573d6000803e3d6000fd5b610811838383604051806020016040528060008152506109a5565b505050565b600061082160085490565b821061084a5760405163295f44f760e21b8152600060048201526024810183905260440161063d565b6008828154811061085d5761085d611874565b90600052602060002001549050919050565b610877610b35565b600e6105e982826118d0565b600061051d82610aef565b600e805461089b9061180b565b80601f01602080910402602001604051908101604052809291908181526020018280546108c79061180b565b80156109145780601f106108e957610100808354040283529160200191610914565b820191906000526020600020905b8154815290600101906020018083116108f757829003601f168201915b505050505081565b60006001600160a01b038216610948576040516322718ad960e21b81526000600482015260240161063d565b506001600160a01b031660009081526003602052604090205490565b61096c610b35565b6109766000610b91565b565b6000806109848361091c565b1192915050565b6060600180546105329061180b565b6105e9338383610be3565b6109b08484846106b3565b6107383385858585610c82565b6000818152600260205260409020546060906001600160a01b03166109f857604051637e27328960e01b81526004810183905260240161063d565b6000600e8054610a079061180b565b905011610a23576040518060200160405280600081525061051d565b600e610a2e83610dad565b604051602001610a3f929190611990565b60405160208183030381529060405292915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610a8a610b35565b6001600160a01b038116610ab457604051631e4fbdf760e01b81526000600482015260240161063d565b6106b081610b91565b610ac5610b35565b600c55565b60006001600160e01b0319821663780e9d6360e01b148061051d575061051d82610e40565b6000818152600260205260408120546001600160a01b03168061051d57604051637e27328960e01b81526004810184905260240161063d565b6108118383836001610e90565b600a546001600160a01b031633146109765760405163118cdaa760e01b815233600482015260240161063d565b6105e9828260405180602001604052806000815250610f96565b6000610b89848484610fae565b949350505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c1557604051630b61174360e31b81526001600160a01b038316600482015260240161063d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610da657604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610cc4908890889087908790600401611a27565b6020604051808303816000875af1925050508015610cff575060408051601f3d908101601f19168201909252610cfc91810190611a64565b60015b610d68573d808015610d2d576040519150601f19603f3d011682016040523d82523d6000602084013e610d32565b606091505b508051600003610d6057604051633250574960e11b81526001600160a01b038516600482015260240161063d565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610da457604051633250574960e11b81526001600160a01b038516600482015260240161063d565b505b5050505050565b60606000610dba8361107b565b600101905060008167ffffffffffffffff811115610dda57610dda611630565b6040519080825280601f01601f191660200182016040528015610e04576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e0e57509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610e7157506001600160e01b03198216635b5e139f60e01b145b8061051d57506301ffc9a760e01b6001600160e01b031983161461051d565b8080610ea457506001600160a01b03821615155b15610f66576000610eb484610aef565b90506001600160a01b03831615801590610ee05750826001600160a01b0316816001600160a01b031614155b8015610ef35750610ef18184610a54565b155b15610f1c5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161063d565b8115610f645783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610fa08383611153565b610811336000858585610c82565b600080610fbc8585856111b8565b90506001600160a01b0381166110195761101484600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61103c565b846001600160a01b0316816001600160a01b03161461103c5761103c81856112b1565b6001600160a01b0385166110585761105384611332565b610b89565b846001600160a01b0316816001600160a01b031614610b8957610b8985856113e1565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110ba5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110e6576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061110457662386f26fc10000830492506010015b6305f5e100831061111c576305f5e100830492506008015b612710831061113057612710830492506004015b60648310611142576064830492506002015b600a831061051d5760010192915050565b6001600160a01b03821661117d57604051633250574960e11b81526000600482015260240161063d565b600061118b83836000610b7c565b90506001600160a01b03811615610811576040516339e3563760e11b81526000600482015260240161063d565b6000828152600260205260408120546001600160a01b03908116908316156111e5576111e5818486611431565b6001600160a01b0381161561122357611202600085600080610e90565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611252576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b60006112bc8361091c565b6000838152600760209081526040808320546001600160a01b038816845260069092529091209192509081831461131357600083815260208281526040808320548584528184208190558352600790915290208290555b6000938452600760209081526040808620869055938552525081205550565b60085460009061134490600190611a81565b6000838152600960205260408120546008805493945090928490811061136c5761136c611874565b90600052602060002001549050806008838154811061138d5761138d611874565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806113c5576113c5611a94565b6001900381819060005260206000200160009055905550505050565b600060016113ee8461091c565b6113f89190611a81565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b61143c838383611495565b610811576001600160a01b03831661146a57604051637e27328960e01b81526004810182905260240161063d565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161063d565b60006001600160a01b03831615801590610b895750826001600160a01b0316846001600160a01b031614806114cf57506114cf8484610a54565b80610b895750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146106b057600080fd5b60006020828403121561152057600080fd5b813561152b816114f8565b9392505050565b60005b8381101561154d578181015183820152602001611535565b50506000910152565b6000815180845261156e816020860160208601611532565b601f01601f19169290920160200192915050565b60208152600061152b6020830184611556565b6000602082840312156115a757600080fd5b5035919050565b80356001600160a01b03811681146115c557600080fd5b919050565b600080604083850312156115dd57600080fd5b6115e6836115ae565b946020939093013593505050565b60008060006060848603121561160957600080fd5b611612846115ae565b9250611620602085016115ae565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561166157611661611630565b604051601f8501601f19908116603f0116810190828211818310171561168957611689611630565b816040528093508581528686860111156116a257600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156116ce57600080fd5b813567ffffffffffffffff8111156116e557600080fd5b8201601f810184136116f657600080fd5b610b8984823560208401611646565b60006020828403121561171757600080fd5b61152b826115ae565b6000806040838503121561173357600080fd5b61173c836115ae565b91506020830135801515811461175157600080fd5b809150509250929050565b6000806000806080858703121561177257600080fd5b61177b856115ae565b9350611789602086016115ae565b925060408501359150606085013567ffffffffffffffff8111156117ac57600080fd5b8501601f810187136117bd57600080fd5b6117cc87823560208401611646565b91505092959194509250565b600080604083850312156117eb57600080fd5b6117f4836115ae565b9150611802602084016115ae565b90509250929050565b600181811c9082168061181f57607f821691505b60208210810361183f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001820161186d5761186d611845565b5060010190565b634e487b7160e01b600052603260045260246000fd5b601f82111561081157600081815260208120601f850160051c810160208610156118b15750805b601f850160051c820191505b81811015610da4578281556001016118bd565b815167ffffffffffffffff8111156118ea576118ea611630565b6118fe816118f8845461180b565b8461188a565b602080601f831160018114611933576000841561191b5750858301515b600019600386901b1c1916600185901b178555610da4565b600085815260208120601f198616915b8281101561196257888601518255948401946001909101908401611943565b50858210156119805787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600080845461199e8161180b565b600182811680156119b657600181146119cb576119fa565b60ff19841687528215158302870194506119fa565b8860005260208060002060005b858110156119f15781548a8201529084019082016119d8565b50505082870194505b505050508351611a0e818360208801611532565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a5a90830184611556565b9695505050505050565b600060208284031215611a7657600080fd5b815161152b816114f8565b8181038181111561051d5761051d611845565b634e487b7160e01b600052603160045260246000fdfea26469706673582212206ac06faf356d116ef22d0b28f7e99d995492bd02b2c56d0d7ce70cdf4dcaec5664736f6c63430008140033";

type VaultKeyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultKeyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultKeyNFT__factory extends ContractFactory {
  constructor(...args: VaultKeyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _initialBaseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _initialBaseURI,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _initialBaseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _initialBaseURI,
      overrides || {}
    ) as Promise<
      VaultKeyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultKeyNFT__factory {
    return super.connect(runner) as VaultKeyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultKeyNFTInterface {
    return new Interface(_abi) as VaultKeyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaultKeyNFT {
    return new Contract(address, _abi, runner) as unknown as VaultKeyNFT;
  }
}
